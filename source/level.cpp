#include <nds.h>
#include <stdlib.h>
#include "level.h"
#include "options.h"

const u8 LEVEL_SQUARE_SMALL[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_SQUARE_MEDIUM[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_SQUARE_LARGE[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_EMPTY[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_STATIONARY_CHECKERBOARD_SMALL[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_STATIONARY_CHECKERBOARD_MEDIUM[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_STATIONARY_CHECKERBOARD_LARGE[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2 },
	{ 2,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_MOVABLE_CHECKERBOARD_SMALL[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_MOVABLE_CHECKERBOARD_MEDIUM[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2 },
	{ 2,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

const u8 LEVEL_MOVABLE_CHECKERBOARD_LARGE[LEVEL_HEIGHT][LEVEL_WIDTH] = {
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2 },
	{ 2,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,2 },
	{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
	{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }
};

Level::Level() {
	canvas = 0;
	current_level.id = 0;
	num_levels = 0;

	for (u8 i = 0; i < MAX_LEVELS; i++) {
		levels[i].id = 0;
	}
}

Level::~Level() {
}

void Level::init(Canvas *the_canvas) {
	canvas = the_canvas;

	map.init(canvas, LEVEL_WIDTH, LEVEL_HEIGHT, TILE_WIDTH, TILE_HEIGHT);

	tiles[0].load_from_file(options.full_path("tiles/empty.tile"));
	tiles[1].load_from_file(options.full_path("tiles/movable_block.tile"));
	tiles[2].load_from_file(options.full_path("tiles/stationary_block.tile"));
	tiles[3].load_from_file(options.full_path("tiles/mouse.tile"));
	tiles[4].load_from_file(options.full_path("tiles/cat.tile"));
	tiles[5].load_from_file(options.full_path("tiles/yarn.tile"));
	tiles[6].load_from_file(options.full_path("tiles/trap.tile"));
	tiles[7].load_from_file(options.full_path("tiles/sinkhole.tile"));
	tiles[8].load_from_file(options.full_path("tiles/cheese.tile"));
	tiles[9].load_from_file(options.full_path("tiles/mouse_sinkhole.tile"));
	tiles[10].load_from_file(options.full_path("tiles/border_opening_vertical.tile"));
	tiles[11].load_from_file(options.full_path("tiles/border_opening_horizontal.tile"));
	tiles[12].load_from_file(options.full_path("tiles/cat_sitting.tile"));

	map.add_tile(&tiles[0], TILE_EMPTY);
	map.add_tile(&tiles[1], TILE_MOVABLE_BLOCK);
	map.add_tile(&tiles[2], TILE_STATIONARY_BLOCK);
	map.add_tile(&tiles[3], TILE_MOUSE);
	map.add_tile(&tiles[4], TILE_CAT);
	map.add_tile(&tiles[5], TILE_YARN);
	map.add_tile(&tiles[6], TILE_MOUSE_TRAP);
	map.add_tile(&tiles[7], TILE_SINK_HOLE);
	map.add_tile(&tiles[8], TILE_CHEESE);
	map.add_tile(&tiles[9], TILE_MOUSE_SINKHOLE);
	map.add_tile(&tiles[10], TILE_BORDER_OPENING_VERTICAL);
	map.add_tile(&tiles[11], TILE_BORDER_OPENING_HORIZONTAL);
	map.add_tile(&tiles[12], TILE_CAT_SITTING);

	load_levels_from_file(options.full_path("levels"));
}

void Level::load() {
	for (u8 i = 0; i < num_levels; i++) {
		if (levels[i].id == current_level.id) {
			current_level = levels[i];
			break;
		}
	}

	switch (current_level.type) {
		case LEVEL_SQUARE:
			switch (current_level.size) {
				case LEVEL_SMALL:
					load_map(LEVEL_SQUARE_SMALL);
					break;

				case LEVEL_MEDIUM:
					load_map(LEVEL_SQUARE_MEDIUM);
					break;

				case LEVEL_LARGE:
					load_map(LEVEL_SQUARE_LARGE);
					break;
			}
			break;

		case LEVEL_SCATTERED:
			load_map(LEVEL_EMPTY);
			break;

		case LEVEL_STATIONARY_CHECKERBOARD:
			switch (current_level.size) {
				case LEVEL_SMALL:
					load_map(LEVEL_STATIONARY_CHECKERBOARD_SMALL);
					break;

				case LEVEL_MEDIUM:
					load_map(LEVEL_STATIONARY_CHECKERBOARD_MEDIUM);
					break;

				case LEVEL_LARGE:
					load_map(LEVEL_STATIONARY_CHECKERBOARD_LARGE);
					break;
			}
			break;

		case LEVEL_MOVABLE_CHECKERBOARD:
			switch (current_level.size) {
				case LEVEL_SMALL:
					load_map(LEVEL_MOVABLE_CHECKERBOARD_SMALL);
					break;

				case LEVEL_MEDIUM:
					load_map(LEVEL_MOVABLE_CHECKERBOARD_MEDIUM);
					break;

				case LEVEL_LARGE:
					load_map(LEVEL_MOVABLE_CHECKERBOARD_LARGE);
					break;
			}
			break;
	}

	randomly_disperse_tile(current_level.movable_block_density, TILE_MOVABLE_BLOCK);
	randomly_disperse_tile(current_level.stationary_block_density, TILE_STATIONARY_BLOCK);
	randomly_disperse_tile(current_level.trap_density, TILE_MOUSE_TRAP);
	randomly_disperse_tile(current_level.sinkhole_density, TILE_SINK_HOLE);
}

bool Level::is_last() {
	LevelId last = 0;

	for (u8 i = 0; i < num_levels; i++) {
		if (levels[i].id > last) {
			last = levels[i].id;
		}
	}

	return (current_level.id == last);
}

void Level::next() {
	if (!is_last()) {
		for (u8 i = 0; i < num_levels; i++) {
			if (levels[i].id == current_level.id) {
				current_level = levels[i + 1];
				break;
			}
		}
	}
}

void Level::load_levels_from_file(const char *filename) {
	// Temporarily hardcoded for testing
	num_levels = 1;
	current_level.id = 1;

	levels[0].id = 1;
	levels[0].type = LEVEL_SQUARE;
	levels[0].size = LEVEL_MEDIUM;
	levels[0].mouse = LEVEL_MOUSE_MIDDLE;
	levels[0].movable_block_density = 0;
	levels[0].stationary_block_density = 20;
	levels[0].yarn_density = 0;
	levels[0].trap_density = 3;
	levels[0].sinkhole_density = 5;
}

void Level::load_map(const u8 data[LEVEL_HEIGHT][LEVEL_WIDTH]) {
	for (u8 i = 0; i < LEVEL_WIDTH; i++) {
		for (u8 j = 0; j < LEVEL_HEIGHT; j++) {
			switch (data[j][i]) {
				case LEVEL_TILE_EMPTY:
					map.set_tile(i, j, TILE_EMPTY);
					break;

				case LEVEL_TILE_MOVABLE:
					map.set_tile(i, j, TILE_MOVABLE_BLOCK);
					break;

				case LEVEL_TILE_STATIONARY:
					map.set_tile(i, j, TILE_STATIONARY_BLOCK);
					break;
			}
		}
	}
}

void Level::randomly_disperse_tile(LevelDensity density, TileNum tile) {
	for (u16 i = 0; i < density; i++) {
		u8 random_x;
		u8 random_y;

		random_x = rand() / (RAND_MAX / (LEVEL_WIDTH - 2)) + 1;
		random_y = rand() / (RAND_MAX / (LEVEL_HEIGHT - 2)) + 1;

		set_tile(random_x, random_y, tile);
	}
}

